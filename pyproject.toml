[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "secret-run"
dynamic = ["version"]
description = "Secure command execution with temporary secret injection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Tools",
    "Topic :: System :: Systems Administration",
]
keywords = ["secrets", "environment", "security", "cli", "devops"]
requires-python = ">=3.10"
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "cryptography>=41.0.0",
    "keyring>=24.0.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
    "platformdirs>=3.0.0",
]

[project.optional-dependencies]
all = [
    "boto3>=1.28.0",           # AWS integration
    "google-cloud-secret-manager>=2.16.0",  # GCP integration
    "azure-keyvault-secrets>=4.7.0",        # Azure integration
    "hvac>=1.2.0",             # HashiCorp Vault
    "requests>=2.31.0",        # HTTP sources
    "watchdog>=3.0.0",         # File watching
    "textual>=0.38.0",         # TUI interface
]
aws = ["boto3>=1.28.0"]
gcp = ["google-cloud-secret-manager>=2.16.0"]
azure = ["azure-keyvault-secrets>=4.7.0"]
vault = ["hvac>=1.2.0"]
tui = ["textual>=0.38.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "ruff>=0.0.284",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/secret-run"
Documentation = "https://secret-run.readthedocs.io"
Repository = "https://github.com/yourusername/secret-run"
Issues = "https://github.com/yourusername/secret-run/issues"
Changelog = "https://github.com/yourusername/secret-run/blob/main/CHANGELOG.md"

[project.scripts]
secret-run = "secret_run.cli.main:app"
srun = "secret_run.cli.main:app"  # Short alias

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/secret_run"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "google.*",
    "azure.*",
    "hvac.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=secret_run",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security-focused",
    "performance: marks tests as performance tests",
    "platform: marks tests as platform-specific",
] 